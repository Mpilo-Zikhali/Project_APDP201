@model Medical_Centre.proj.Models.PatientDetails

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/Patient.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
  
    <body>
<div class="container">
    <div class="title">PatientDetails</div>
    <form action="#">
       <div  class="user-details">
     
           <div class="input-box">
               <div class="Details">
                   @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                   @Html.LabelFor(model => model.SNumber, htmlAttributes: new { @class = "control-label col-md-2" })
               </div>
                   @Html.EditorFor(model => model.SNumber, new { htmlAttributes = new { @class = "form-control" } })
                   @Html.ValidationMessageFor(model => model.SNumber, "", new { @class = "text-danger" })
               
           </div>

           <div class="input-box">
               <div class=" Details">
                   @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
               </div>
                   @Html.EnumDropDownListFor(model => model.Role, htmlAttributes: new { @class = "form-control" })
                   @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
              
           </div>

           <div class="input-box">
               <div class="Details">
                   @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                   </div>
                       @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                       @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                   
               </div>

           <div class="input-box">
               <div class="Details">
                   @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                   </div>
                       @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                       @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                  
               </div>

           <div class="input-box">
               <div class="Details">
                   @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
                   </div >
                       @Html.EnumDropDownListFor(model => model.gender, htmlAttributes: new { @class = "form-control" })
                       @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                  
               </div>

               <div class="input-box">
                   <div class="Details">
                       @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                       <div class="col-md-10">
                           @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                           @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                       </div>
                   </div>

                   <div class="input-box">
                       <div class="Details">
                           @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                           </div>
                               @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                               @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                         
                       </div>

                       <div class="input-box">
                           <div class="Details">
                               @Html.LabelFor(model => model.University, htmlAttributes: new { @class = "control-label col-md-2" })
                          </div>
                                   @Html.EnumDropDownListFor(model => model.University, htmlAttributes: new { @class = "form-control" })
                                   @Html.ValidationMessageFor(model => model.University, "", new { @class = "text-danger" })
                              
                           </div>

                       <div class="input-box">
                           <div class="Details">
                               @Html.LabelFor(model => model.Cillness, htmlAttributes: new { @class = "control-label col-md-2" })
                           </div >
                                   @Html.EnumDropDownListFor(model => model.Cillness, htmlAttributes: new { @class = "form-control" })
                                   @Html.ValidationMessageFor(model => model.Cillness, "", new { @class = "text-danger" })
                               
                       </div>

                       <div class="input-box">
                           <div class="Details">
                               @Html.LabelFor(model => model.CreatePassword, htmlAttributes: new { @class = "control-label col-md-2" })
                               </div >
                                   @Html.EditorFor(model => model.CreatePassword, new { htmlAttributes = new { @class = "form-control" } })
                                   @Html.ValidationMessageFor(model => model.CreatePassword, "", new { @class = "text-danger" })
                              
                       </div>

                       <div class="input-box">
                           <div class="Details">
                               @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                           </div>
                           @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                           @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                       </div>
                           </div>

                          
                               <div class="button">
                                   <input type="submit" value="Create Account"/>
                               </div>
                          
                       </div>
        </form>
</div>
        </body>
}


